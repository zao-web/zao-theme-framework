// Center block
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// Clearfix
@mixin clearfix() {
	content: "";
	display: table;
	table-layout: fixed;
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
	clear: both;
}

// Column width with margin
@mixin column-width($numberColumns: 3) {
	width: map-get($columns, $numberColumns) - (($columns__margin * ($numberColumns - 1)) / $numberColumns);
}

@mixin filter-duotone {

	&:before {
		background: $color__link;
		mix-blend-mode: screen;
		opacity: 0.1;
		z-index: 2;
	}

	&:after {
		background: $color__link;
		mix-blend-mode: multiply;
		opacity: .8;
		z-index: 3;

		/* Browsers supporting mix-blend-mode don't need opacity < 1 */
		@supports (mix-blend-mode: multiply) {
			opacity: 1;
		}
	}
}

@mixin filter-grayscale {

	position: relative;
	filter: grayscale(100%);
	z-index: 1;

	&:after {
		display: block;
		width: 100%;
		height: 100%;
		z-index: 10;
	}
}

/* If we add the border using a regular CSS border, it won't look good on non-retina devices,
 * since its edges can look jagged due to lack of antialiasing. In this case, we are several
 * layers of box-shadow to add the border visually, which will render the border smoother. */

@mixin box-shadow( $size ) {
	box-shadow:
		0 0 0 $size $color__text-light inset,         	// Original border.
		0 0 0 ($size + 1px) $color__text-light inset, 	// Antialiasing, inner edge.
		0 0 1px 0 rgba( $color__text-light, 0.7 );  	// Antialiasing, outer edge.
}

@mixin regularContentMaxWidth() {
	grid-column: 2 / -2;

	@include media(tablet) {
		grid-column: 4 / -4;
	}
}

@mixin wideContentMaxWidth() {
	grid-column: 2 / -2;

	@include media(tablet) {
		grid-column: 3 / -3;
	}
}

@mixin fullContentMaxWidth() {
	grid-column: 1 / -1;
}


/* Nested sub-menu padding: 10 levels deep */
@mixin nestedSubMenuPadding() {

	ul {
		counter-reset: submenu;
	}

	ul > li > a::before {
		font-family: $font__body;
		font-weight: normal;
		content: "\2013\00a0" counters(submenu, "\2013\00a0", none);
		counter-increment: submenu
	}
}


@mixin media( $res ) {
	@if mobile == $res {
		@media only screen and (min-width: $mobile_width) {
			@content;
		}
	}

	@if tablet == $res {
		@media only screen and (min-width: $tablet_width) {
			@content;
		}
	}

	@if desktop == $res {
		@media only screen and (min-width: $desktop_width) {
			@content;
		}
	}

	@if wide == $res {
		@media only screen and (min-width: $wide_width) {
			@content;
		}
	}
}

@mixin selection {
	::-moz-selection {
		@content;
	}
	::selection {
		@content;
	}
}
